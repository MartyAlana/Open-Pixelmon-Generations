--- a/com/pixelmongenerations/client/gui/advent/GuiAdventCalendar.java
+++ b/com/pixelmongenerations/client/gui/advent/GuiAdventCalendar.java
@@ -3,6 +3,7 @@
 import com.pixelmongenerations.core.Pixelmon;
 import com.pixelmongenerations.core.holiday.Christmas;
 import com.pixelmongenerations.core.network.packetHandlers.adventurecalendar.ReadAdventCalendarPacket;
+import com.pixelmongenerations.core.util.functional.BiFunction;
 import com.teamwizardry.librarianlib.features.animator.Easing;
 import com.teamwizardry.librarianlib.features.eventbus.Hook;
 import com.teamwizardry.librarianlib.features.facade.EnumMouseButton;
@@ -13,7 +14,6 @@
 import com.teamwizardry.librarianlib.features.facade.layers.SpriteLayer;
 import com.teamwizardry.librarianlib.features.facade.value.RMValue;
 import com.teamwizardry.librarianlib.features.math.Vec2d;
-import com.teamwizardry.librarianlib.features.sprite.ISprite;
 import com.teamwizardry.librarianlib.features.sprite.Sprite;
 import com.teamwizardry.librarianlib.features.sprite.Texture;
 import java.util.ArrayList;
@@ -24,15 +24,14 @@
 import java.util.stream.IntStream;
 import kotlin.Unit;
 import net.minecraft.util.ResourceLocation;
+import scala.Int;
 
 public class GuiAdventCalendar extends GuiBase {
     private static final Sprite background = getSprite("background");
     private static final Sprite behind_door = getSprite("behind_door");
-    private static final List<Sprite> door_sprites = (List)IntStream.rangeClosed(1, 12).mapToObj((a) -> {
-        return "door_" + a;
-    }).map(GuiAdventCalendar::getSprite).collect(Collectors.toList());
+    private static final List<Sprite> door_sprites = IntStream.rangeClosed(1, 12).mapToObj((a) -> "door_" + a).map(GuiAdventCalendar::getSprite).collect(Collectors.toList());
     private static final Texture frost_panels = new Texture(new ResourceLocation("pixelmon:textures/gui/advent_calendar/frost_panels.png"), 512, 512);
-    private List<GuiAdventCalendar.Element> doors = new ArrayList();
+    private final List<GuiAdventCalendar.Element> doors = new ArrayList<>();
 
     private static Sprite getSprite(String s) {
         return new Sprite(new ResourceLocation("pixelmon:textures/gui/advent_calendar/" + s + ".png"));
@@ -52,43 +51,36 @@
             }
         }
 
-        this.doors.forEach((xva$0) -> {
-            calendar.add(new GuiLayer[]{xva$0});
-        });
+        this.doors.forEach(calendar::add);
         GuiLayer left = new SpriteLayer(frost_panels.getSprite("left"), 512, 0, 256, 512);
         left.setAnchor(Vec2d.getPooled(1.0D, 0.0D));
         GuiLayer right = new SpriteLayer(frost_panels.getSprite("right"), 512, 0, 256, 512);
         right.setAnchor(Vec2d.getPooled(0.0D, 0.0D));
-        (new RMValue(0.0D, (a, b) -> {
-            double diff = b - a;
+        new RMValue<>(0.0D, (a, b) -> {
+            double diff = a - b;
             right.setPos(right.getPos().add(diff, 0.0D));
             left.setPos(left.getPos().sub(diff, 0.0D));
             return Unit.INSTANCE;
-        })).animate(256.0D, 80.0F, Easing.linear).completion(() -> {
-            (new RMValue(0.0D, (a, b) -> {
+        }).animate(256.0D, 80.0F, Easing.linear).completion(() -> {
+            (new RMValue<>(0.0D, (a, b) -> {
                 double diff = b - a;
-                List<GuiAdventCalendar.Element> elements = this.doors;
-                Iterator var6 = ClientAdventCalendarManager.adventCalendar.getDays().entrySet().iterator();
-
-                while(var6.hasNext()) {
-                    Entry<Integer, Boolean> e = (Entry)var6.next();
-                    if ((Boolean)e.getValue()) {
-                        GuiLayer value = ((GuiAdventCalendar.Element)elements.get((Integer)e.getKey())).getDoor();
+                for (Entry<Integer, Boolean> integerBooleanEntry : ClientAdventCalendarManager.adventCalendar.getDays().entrySet()) {
+                    if (integerBooleanEntry.getValue()) {
+                        GuiLayer value = this.doors.get(integerBooleanEntry.getKey()).getDoor();
                         value.setPos(value.getPos().add(diff, 0.0D));
                     }
                 }
-
                 return Unit.INSTANCE;
             })).animate(96.0D, 80.0F, Easing.linear);
         });
-        component.add(new GuiLayer[]{calendar});
-        this.getMain().add(new GuiLayer[]{component, left, right});
+        component.add(calendar);
+        this.getMain().add(component, left, right);
     }
 
     public static class Element extends GuiComponent {
-        private final SpriteLayer door = new SpriteLayer((ISprite)null, 0, 0, 96, 96);
-        private boolean alreadyOpened;
-        private int day;
+        private final SpriteLayer door = new SpriteLayer(null, 0, 0, 96, 96);
+        private final boolean alreadyOpened;
+        private final int day;
 
         public Element(int x, int y, int day) {
             super(x, y, 96, 96);
@@ -97,10 +89,10 @@
             this.setClipToBounds(true);
             GuiLayer back = new SpriteLayer(GuiAdventCalendar.behind_door, 0, 0, 96, 96);
             GuiLayer contents = new SpriteLayer(ClientAdventCalendarManager.adventCalendar.getSprite(day), 22, 23, 54, 54);
-            this.door.setSprite((ISprite)GuiAdventCalendar.door_sprites.get(day));
-            this.add(new GuiLayer[]{back});
-            this.add(new GuiLayer[]{contents});
-            this.add(new GuiLayer[]{this.door});
+            this.door.setSprite(GuiAdventCalendar.door_sprites.get(day));
+            this.add(back);
+            this.add(contents);
+            this.add(this.door);
         }
 
         public GuiLayer getDoor() {
