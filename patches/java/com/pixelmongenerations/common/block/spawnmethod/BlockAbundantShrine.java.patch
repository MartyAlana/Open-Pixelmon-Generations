--- a/com/pixelmongenerations/common/block/spawnmethod/BlockAbundantShrine.java
+++ b/com/pixelmongenerations/common/block/spawnmethod/BlockAbundantShrine.java
@@ -23,22 +23,15 @@
 
     protected boolean checkExtraRequirements(EntityPlayer player, World world, BlockPos pos) {
         if (player.world.isThundering()) {
-            PlayerStorage storage = (PlayerStorage)PixelmonStorage.pokeBallManager.getPlayerStorage((EntityPlayerMP)player).get();
-            IntStream var10000 = IntStream.range(0, 6);
-            storage.getClass();
-            Stream var5 = var10000.mapToObj(storage::getIDFromPosition).map((id) -> {
-                return storage.getPokemon(id, player.world);
-            }).filter(Objects::nonNull).filter((a) -> {
-                return a.getSpecies() == EnumSpecies.Meloetta;
-            }).map((a) -> {
-                return a.extraStats;
-            });
-            MeloettaStats.class.getClass();
-            var5 = var5.filter(MeloettaStats.class::isInstance);
-            MeloettaStats.class.getClass();
-            return var5.map(MeloettaStats.class::cast).anyMatch((a) -> {
-                return a.abundantActivations < MeloettaStats.MAX_ACTIVATIONS;
-            });
+            PlayerStorage storage = PixelmonStorage.pokeBallManager.getPlayerStorage((EntityPlayerMP)player).get();
+            return IntStream.range(0, 6)
+                    .mapToObj(storage::getIDFromPosition)
+                    .map((id) -> storage.getPokemon(id, player.world))
+                    .filter(Objects::nonNull)
+                    .filter((a) -> a.getSpecies() == EnumSpecies.Meloetta).map((a) -> a.extraStats)
+                    .filter(MeloettaStats.class::isInstance)
+                    .map(MeloettaStats.class::cast)
+                    .anyMatch((a) -> a.abundantActivations < MeloettaStats.MAX_ACTIVATIONS);
         } else {
             return false;
         }
